{"version":3,"sources":["../../tests/plot.spec.js"],"names":[],"mappings":";;;;;;;;;;;;oBAAuB,MAAM;;0BACX,aAAa;;;;yBACd,gBAAgB;;;;2BACf,cAAc;;;;AAEhC,IAAM,cAAc,GAAG,yBAAM,MAAM,CAAC,SAAS,CAAC;;AAE9C,IAAI,GAAG,YAAA,CAAA;;AAEP,QAAQ,CAAC,MAAM,EAAE,YAAM;AACrB,gCAAO,CAAC;;MAEF,iBAAiB;cAAjB,iBAAiB;;aAAjB,iBAAiB;4BAAjB,iBAAiB;;iCAAjB,iBAAiB;;;iBAAjB,iBAAiB;;aACJ,6BAAG;AAClB,eAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzB,YAAM,IAAI,GACR,yBAAM,WAAW,CAAC,cAAc,CAAC,iCAAiC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;AACnF,YAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,eAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;OAChC;;;aAEK,kBAAG;AACP,eACE;AACE,mBAAS,EAAC,OAAO;AACjB,YAAE,EAAE,UAAA,CAAC;mBAAI,CAAC,GAAG,CAAC;WAAA,AAAC;AACf,gBAAM,EAAE,GAAG,AAAC;AACZ,eAAK,EAAE,GAAG,AAAC;AACX,mBAAS,EAAE,CAAC,AAAC;UACb,CACF;OACH;;;WAnBG,iBAAiB;KAAS,yBAAM,SAAS;;AAsB/C,YAAU,CAAC,YAAM;AACf,OAAG,GAAG,cAAc,CAAC,kBAAkB,CAAC,uCAAC,iBAAiB,OAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;GAC1B,CAAC,CAAC;;AAEH,IAAE,CAAC,uBAAuB,EAAE,YAAM;AAChC,QAAM,KAAK,GAAG,cAAc,CAAC,kCAAkC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC7E,iBAAO,SAAS,CAAC,KAAK,CAAC,CAAC;AACxB,iBAAO,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;GAC/B,CAAC,CAAC;;AAEH,IAAE,CAAC,qBAAqB,EAAE,YAAM;AAC9B,QAAM,IAAI,GACR,yBAAM,WAAW,CAAC,cAAc,CAAC,iCAAiC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;AACnF,iBAAO,SAAS,CAAC,IAAI,CAAC,CAAC;AACvB,iBAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;GACnC,CAAC,CAAC;CACJ,CAAC,CAAC","file":"index.js","sourcesContent":["import { assert } from 'chai';\nimport jsdom from 'mocha-jsdom';\nimport Plot from '../src/plot.js';\nimport React from 'react/addons';\n\nconst ReactTestUtils = React.addons.TestUtils;\n\nlet spw\n\ndescribe('Plot', () => {\n  jsdom();\n\n  class SinglePlotWrapper extends React.Component {\n    componentDidMount() {\n      console.log('spw1', spw);\n      const plot =\n        React.findDOMNode(ReactTestUtils.findRenderedDOMComponentWithClass(spw, \"plot\"));\n      const childNodes = plot.childNodes;\n      console.log(childNodes.length);\n    }\n\n    render() {\n      return (\n        <Plot\n          className='plot1'\n          fn={x => x * x}\n          height={300}\n          width={300}\n          thickness={4}\n        />\n      );\n    }\n  }\n\n  beforeEach(() => {\n    spw = ReactTestUtils.renderIntoDocument(<SinglePlotWrapper/>);\n    console.log('spw2', spw);\n  });\n\n  it('renders a single plot', () => {\n    const plots = ReactTestUtils.scryRenderedDOMComponentsWithClass(spw, \"plot\");\n    assert.isDefined(plots);\n    assert.equal(plots.length, 1);\n  });\n  \n  it('(the plot) is a DIV', () => {\n    const plot =\n      React.findDOMNode(ReactTestUtils.findRenderedDOMComponentWithClass(spw, \"plot\"));\n    assert.isDefined(plot);\n    assert.equal(plot.tagName, 'DIV');\n  });\n});\n"]}