"use strict";

var _getIterator = require("babel-runtime/core-js/get-iterator")["default"];

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

var _interopRequireWildcard = require("babel-runtime/helpers/interop-require-wildcard")["default"];

exports.__esModule = true;

var _helpersReplaceSupers = require("../../helpers/replace-supers");

var _helpersReplaceSupers2 = _interopRequireDefault(_helpersReplaceSupers);

var _babelTypes = require("babel-types");

var t = _interopRequireWildcard(_babelTypes);

function Property(path, node, scope, getObjectRef, file) {
  if (!node.method && node.kind === "init") return;
  if (!t.isFunction(node.value)) return;

  var replaceSupers = new _helpersReplaceSupers2["default"]({
    getObjectRef: getObjectRef,
    methodNode: node,
    methodPath: path,
    isStatic: true,
    scope: scope,
    file: file
  });

  replaceSupers.replace();
}

var visitor = {
  ObjectExpression: function ObjectExpression(path, file) {
    var objectRef = undefined;
    var getObjectRef = function getObjectRef() {
      return objectRef = objectRef || path.scope.generateUidIdentifier("obj");
    };

    var propPaths /*: Array*/ = path.get("properties");
    for (var _iterator = propPaths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _getIterator(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var propPath = _ref;

      Property(propPath, propPath.node, path.scope, getObjectRef, file);
    }

    if (objectRef) {
      path.scope.push({ id: objectRef });
      return t.assignmentExpression("=", objectRef, path.node);
    }
  }
};
exports.visitor = visitor;